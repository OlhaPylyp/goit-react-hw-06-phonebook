{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Section.module.css","Components/PhoneBook/FormPhonebook.module.css","Redux/Phone/phone-actions.js","Components/PhoneBook/FormPhonebook.jsx","Components/ContactItem/ContactItem.jsx","Components/Filter/Filter.jsx","Components/Section.jsx","Redux/Phone/phone-reducer.js","Redux/store.js","App.js","index.js","Components/ContactItem/ContactItem.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","filterChange","deleteContact","FormPhonebook","state","nameId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","className","styles","form_container","form","this","label","htmlFor","input","type","pattern","title","required","onChange","span","btn","Component","connect","dispatch","actions","getFilter","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","onDeleteContact","contact_list","map","contact_item","contact_item_name","contact_item_tel","contact_btn","onClick","container","Section","children","defaultProps","itemReducer","createReducer","filterReducer","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","onAddContact","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,wB,mBCA9FD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,UAAY,6B,4DCA7DD,EAAOC,QAAU,CAAC,eAAiB,sCAAsC,KAAO,4BAA4B,MAAQ,6BAA6B,MAAQ,6BAA6B,IAAM,6B,+KCE/KC,EAAaC,YAAa,uBAAuB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACnFC,QAAS,CAAEC,GAAIC,IAAQC,WAAYL,OAAMC,cAQ9BK,EAAeP,YAAa,mBAM5BQ,EAAgBR,YAAa,mB,OCbpCS,E,4MACJC,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAEVS,OAASN,IAAQC,W,EAEjBM,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,cAAlBb,EADY,EACZA,KAAMc,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBf,EAAOc,K,EAE1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKM,SAAS,CAAEf,KAAM,GAAIC,OAAQ,M,4CAIpC,WACE,OACE,qBAAKmB,UAAWC,IAAOC,eAAvB,SACE,uBAAMF,UAAWC,IAAOE,KAAMJ,SAAUK,KAAKR,aAA7C,UACE,wBAAOI,UAAWC,IAAOI,MAAOC,QAASF,KAAKd,OAA9C,iBAEE,uBACEU,UAAWC,IAAOM,MAClBC,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,MAAOU,KAAKf,MAAMT,KAClBgC,SAAUR,KAAKb,aACfR,GAAIqB,KAAKd,YAGb,wBAAOU,UAAWC,IAAOI,MAAzB,UACE,sBAAML,UAAWC,IAAOY,KAAxB,iBACA,uBACEb,UAAWC,IAAOM,MAClBC,KAAK,MACL5B,KAAK,SACL6B,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRjB,MAAOU,KAAKf,MAAMR,OAClB+B,SAAUR,KAAKb,kBAGnB,wBAAQiB,KAAK,SAASR,UAAWC,IAAOa,IAAxC,kC,GAjDkBC,aAgEbC,cAAQ,MAPI,SAACC,GAC1B,MAAM,CAAElB,SAAS,gBAAGnB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAAoBoC,EAASC,EAAmB,CAAEtC,OAAMC,gBAM5DmC,CAAiC5B,G,gBC/B1C+B,EAAY,SAACC,EAAaC,GAC9B,IAAMC,EAAmBD,EAAOE,cAChC,OAAOH,EAAYC,QAAO,qBAAGzC,KACtB2C,cAAcC,SAASF,OAYjBN,eARS,SAAC,GAAD,QAAGS,SAAYC,EAAf,EAAeA,MAAOL,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DI,SAAUN,EAAUO,EAAOL,OAEF,SAACJ,GAC1B,MAAO,CACLU,gBAAiB,SAAC5C,GAAD,OAAQkC,EAASC,EAAsBnC,QAG7CiC,EAhDK,SAAC,GAAD,IAAGW,EAAH,EAAGA,gBAAiBF,EAApB,EAAoBA,SAApB,OAClB,gCACG,IACD,oBAAIzB,UAAWC,IAAO2B,aAAtB,SACGH,EAASI,KAAI,YAA2B,IAAxBjD,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,GAAIF,EAAa,EAAbA,OACzB,OACE,qBAAImB,UAAWC,IAAO6B,aAAtB,UACG,IACD,uBAAM9B,UAAWC,IAAO8B,kBAAxB,UAA4CnD,EAA5C,OACA,sBAAMoB,UAAWC,IAAO+B,iBAAxB,SAA2CnD,IAAe,IAC1D,wBACE2B,KAAK,SACLR,UAAWC,IAAOgC,YAClBC,QAAS,kBAAMP,EAAgB5C,IAHjC,sBAJuCA,QAczC,U,iBCOKiC,eATS,SAAC3B,EAAOS,GAC9B,MAAO,CAAEJ,MAAOL,EAAMoC,SAASJ,WAGN,SAACJ,GAC1B,MAAO,CACLL,SAAU,SAACpB,GAAD,OAAOyB,EAASC,EAAqB1B,EAAEC,cAAcC,YAGpDsB,EA3BA,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOkB,EAAV,EAAUA,SAAV,OACb,qBAAKZ,UAAWC,IAAOkC,UAAvB,SACE,wBAAOnC,UAAWC,IAAOI,MAAzB,iCAEE,uBACEL,UAAWC,IAAOM,MAClBC,KAAK,OACLd,MAAOA,EACPkB,SAAUA,IACT,Y,iBCZHwB,EAAU,SAAC,GAAD,IAAG1B,EAAH,EAAGA,MAAO2B,EAAV,EAAUA,SAAV,OACd,0BAASrC,UAAWC,IAAOkC,UAA3B,UACE,oBAAInC,UAAWC,IAAOS,MAAtB,SAA8BA,IAC7B2B,MAGLD,EAAQE,aAAe,CACrB5B,MAAO,IAKM0B,I,EAAAA,I,wDCVTG,EAAcC,YAAc,IAAD,mBAC9BtB,GAAqB,SAAC7B,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OAD1B,cAG9BoC,GAAwB,SAAC7B,EAAD,OAAUP,EAAV,EAAUA,QAAV,mBACpBO,EAAMgC,QAAO,qBAAGtC,KAAgBD,SAJN,IAQ3B2D,EAAgBD,YAAc,GAAD,eAChCtB,GAAuB,qBAAGpC,YAGd4D,cAAgB,CAC7BhB,MAAOa,EACPlB,OAAQoB,ICHJE,EAAgB,CACpBC,IAAK,aACLC,aAEIC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAMIC,EAAQC,YAAe,CAC3BC,QAAS,CACPlC,SAAUmC,YAAejB,EAAekB,IAE1Cf,aACAgB,UAAUC,IAKG,GAAEN,QAAOO,UAFNC,YAAaR,ICuB/B,IAQezC,eARS,SAAC3B,EAAOS,GAC9B,MAAO,CAAEuB,OAAQhC,EAAMgC,WAEE,SAACJ,GAC1B,MAAO,KAIMD,EA3Df,YAuCE,OAvC4C,EAA/BU,MAA+B,EAAxBL,OAAwB,EAAhB6C,aAwC1B,gCACE,cAAC,EAAD,CAASxD,MAAM,YAAf,SACE,cAAC,EAAD,MAEF,eAAC,EAAD,CAASA,MAAM,gBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IAAgB,a,cChDxByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaa,QAAS,KAAMN,UAAWP,EAAMO,UAA7C,SACE,cAAC,EAAD,UAINO,SAASC,eAAe,U,kBChB1BhG,EAAOC,QAAU,CAAC,aAAe,kCAAkC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,YAAc,oC","file":"static/js/main.c7f9a29e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1YCMf\",\"input\":\"Filter_input__1T59n\",\"label\":\"Filter_label__3Nv7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3nA2p\",\"container\":\"Section_container__3LeRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"FormPhonebook_form_container__1iPGX\",\"form\":\"FormPhonebook_form__1JTMZ\",\"input\":\"FormPhonebook_input__3MpE2\",\"label\":\"FormPhonebook_label__3N-RO\",\"btn\":\"FormPhonebook_btn__1ky5H\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\r\n  payload: { id: shortid.generate(), name, number },\r\n}));\r\n\r\n// ({ id, name, number }) => ({\r\n//   type: actionTypes.ADD_CONTACT,\r\n//   payload: { id: shortid.generate(), name, number },\r\n//   x: 5,\r\n// });\r\nexport const filterChange = createAction(\"contacts/filter\");\r\n\r\n// (payload) => ({\r\n//   type: actionTypes.FILTER_CHANGE,\r\n//   payload,\r\n// });\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\n\r\n// export default {addContact, filterChange, deleteContact };\r\n","import shortid from \"shortid\";\r\nimport { Component } from \"react\";\r\nimport styles from \"./FormPhonebook.module.css\";\r\nimport { connect} from \"react-redux\";\r\nimport * as actions from \"../../Redux/Phone/phone-actions\"\r\nclass FormPhonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n    // console.log(this.props);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.form_container}>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameId}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            <span className={styles.span}>Tel</span>\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{ onSubmit:({ name, number })=>dispatch(actions.addContact({ name, number })),\r\n  // onFilter:()=>dispatch(actions.filterChange()),\r\n  // onDeleteContact:(id)=>dispatch(actions.deleteContact(id)),\r\n  }\r\n \r\n };\r\nexport default connect(null,mapDispatchToProps)(FormPhonebook);\r\n","import styles from \"./ContactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Phone/phone-actions\";\r\n\r\nconst ContactItem = ({ onDeleteContact, contacts }) => (\r\n  <div>\r\n    {\" \"}\r\n    <ul className={styles.contact_list}>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <li className={styles.contact_item} key={id}>\r\n            {\" \"}\r\n            <span className={styles.contact_item_name}>{name}:</span>\r\n            <span className={styles.contact_item_tel}>{number}</span>{\" \"}\r\n            <button\r\n              type=\"submit\"\r\n              className={styles.contact_btn}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>{\" \"}\r\n  </div>\r\n);\r\nContactItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\nconst getFilter = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilter(items, filter),\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../Redux/Phone/phone-actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.container}>\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />{\" \"}\r\n    </label>\r\n  </div>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return { value: state.contacts.filter };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => dispatch(actions.filterChange(e.currentTarget.value)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"../Components/Section.module.css\";\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./phone-actions\";\r\n\r\nconst itemReducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n\r\n  [actions.deleteContact]: (state, { payload }) => [\r\n    ...state.filter(({ id }) => id !== payload),\r\n  ],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.filterChange]: ({ payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./Phone/phone-reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"phoneBooks\",\r\n  storage,\r\n};\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n// const rootReducer = combineReducers({ contacts: contactsReducer });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport FormPhonebook from \"./Components/PhoneBook\";\nimport ContactItem from \"./Components/ContactItem\";\nimport Filter from \"./Components/Filter\";\nimport Section from \"./Components/Section\";\nimport { connect } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport * as actions from \"./Redux/Phone/phone-actions\";\n\nfunction App({ items, filter, onAddContact }) {\n  //  store.dispatch(filterChange(5))\n  // state = {\n  //   contacts: [],\n  //   filter: \"\",\n  // };\n  // componentDidMount() {\n  //   const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n  //   console.log(\" componentDidMount\", contacts);\n  //   if (contacts) {\n  //     this.setState({ contacts: contacts });\n  //   }\n  // }\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts)\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  // }\n  // addContact = ({ name, number }) => {\n  //   // console.log(\"this.state.contacts\",this.state.contacts)\n  //   const sameName = this.state.contacts.some((item) => item.name === name);\n  //   console.log(\"sameName\", sameName);\n\n  //   if (sameName) {\n  //     window.alert(`LocalHost:3000 says ${name} is already in contact`);\n  //     return;\n  //   }\n  //   let contact = {\n  //     name,\n  //     number: number,\n  //     id: shortid.generate(),\n  //   };\n\n  //   this.setState((preState) => {\n  //     return {\n  //       contacts: [contact, ...preState.contacts],\n  //     };\n  //   });\n  // };\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <FormPhonebook />\n      </Section>\n      <Section title=\"Contacts list\">\n        <Filter />\n        <ContactItem />{\" \"}\n      </Section>\n    </div>\n  );\n}\nconst mapStateToProps = (state, props) => {\n  return { filter: state.filter };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // onAddContact:({ name, number })=>dispatch(actions.addContact({ name, number })),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport  store from \"./Redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactItem_contact_list__JNxSI\",\"contact_item_name\":\"ContactItem_contact_item_name__2Xcd7\",\"contact_item_tel\":\"ContactItem_contact_item_tel__FfXPu\",\"contact_btn\":\"ContactItem_contact_btn__2wwFx\"};"],"sourceRoot":""}